const assert = require('assert');
const request = require('request');

describe('/osrm', () => {
  describe('#/matching', () => {
    it('should return status 200', () => {
      const options = {
        geometries: 'geojson',
        coordinates: [
          [113.93630056413673, 22.488391808799467],
          [113.93630056418932, 22.488390975458984],
          [113.93630056471521, 22.488382642054056],
          [113.93630056471521, 22.488382642054056],
          [113.93630056468015, 22.48838319761439],
          [113.93630333876109, 22.48839180401069],
          [113.93630361620602, 22.48839208131196],
          [113.93630833259333, 22.48839957323462],
          [113.93630833254075, 22.488400406575103],
          [113.93630638977824, 22.48840874333239],
          [113.93630638977824, 22.48840874333239],
          [113.93630638974318, 22.4884092988927],
          [113.93630638919976, 22.488417910077484],
          [113.93629612212503, 22.4884332057039],
          [113.93628058302735, 22.48845212156232],
          [113.93626032675189, 22.48847576780632],
          [113.93623674079538, 22.488501086451897],
          [113.93621232247709, 22.48852557316761],
          [113.93618346457185, 22.488552289740745],
          [113.93614850175179, 22.488589572421425],
          [113.93610909912849, 22.488631862720563],
          [113.93606830874441, 22.488679988717557],
          [113.93602807304502, 22.48873089149331],
          [113.93598894708825, 22.488782625639054],
          [113.9359523180374, 22.488837966584924],
          [113.93591263654588, 22.488897201612485],
          [113.9358712898834, 22.4889611616757],
          [113.935826058156, 22.489032072793062],
          [113.93578054904725, 22.489100206495387],
          [113.93573115489473, 22.489174457880708],
          [113.93568314831937, 22.48924342898343],
          [113.93563375418763, 22.48931406902291],
          [113.93558519234618, 22.489384985324474],
          [113.93553635275627, 22.489458679792126],
          [113.93548473790355, 22.4895393233473],
          [113.93544117024182, 22.489610508668797],
          [113.9354012097551, 22.48968002113441],
          [113.93536374662008, 22.489747029296666],
          [113.93532822593578, 22.48981097854429],
          [113.93529770014037, 22.489868530387096],
          [113.93527355678499, 22.48991718249183],
          [113.93525690605226, 22.489952766316463],
          [113.93524497310275, 22.489976953226197],
          [113.93523886786181, 22.489989463581455],
          [113.93523692532546, 22.489992800205137],
          [113.93523692532546, 22.489992800205137],
          [113.9352369252904, 22.489993355764266],
          [113.9352344275581, 22.490000582235588],
        ],
        timestamps: [
          1545879710,
          1545879728,
          1545879729,
          1545879790,
          1545879810,
          1545879811,
          1545879847,
          1545879848,
          1545879873,
          1545879874,
          1545879934,
          1545879951,
          1545879962,
          1545879963,
          1545879964,
          1545879965,
          1545879966,
          1545879967,
          1545879968,
          1545879969,
          1545879970,
          1545879971,
          1545879972,
          1545879973,
          1545879974,
          1545879975,
          1545879976,
          1545879977,
          1545879978,
          1545879979,
          1545879980,
          1545879981,
          1545879982,
          1545879983,
          1545879984,
          1545879985,
          1545879986,
          1545879987,
          1545879988,
          1545879989,
          1545879990,
          1545879991,
          1545879992,
          1545879993,
          1545879995,
          1545879996,
          1545879997,
          1545879998,
        ],
      };
      request.post('http://localhost:8080/osrm/matching', {
        json: options,
      }, (error, res, body) => {
        if (error) {
          console.error(error);
          return;
        }
        console.log(`statusCode: ${res.statusCode}`);
        assert.equal(res.statusCode, 200);
        console.log(body);
      });
    });
  });
});


describe('/osrm', () => {
  describe('#/nearest', () => {
    it('should return status 200', () => {
      request.post('http://localhost:8080/osrm/nearest', {
        json: options,
      }, (error, res, body) => {
        if (error) {
          console.error(error);
          return;
        }
        console.log(`statusCode: ${res.statusCode}`);
        assert.equal(res.statusCode, 200);
        console.log(body);
      });
    });
  });
});
